# escape=`
FROM mcr.microsoft.com/windows/servercore/iis:latest
#FROM mcr.microsoft.com/windows/servercore/iis:windowsservercore-1909
SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'Continue'; $verbosePreference='Continue';"]

# Enable Windows Authentication
RUN Install-WindowsFeature Web-Windows-Auth

#RUN [Net.ServicePointManager]::Expect100Continue = {$true}
#RUN [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
#RUN [Net.ServicePointManager]::SecurityProtocol = `
#  [Net.SecurityProtocolType]::Tls12 -bor `
#  [Net.SecurityProtocolType]::Tls11 -bor `
#  [Net.SecurityProtocolType]::Tls
#RUN [Net.ServicePointManager]::SecurityProtocol = 'tls12, tls11, tls'


RUN [Net.ServicePointManager]::SecurityProtocol = 'tls12, tls11, tls';` 
    Invoke-WebRequest -UseBasicParsing -Uri https://dot.net/v1/dotnet-install.ps1 -OutFile dotnet-install.ps1; `
    ./dotnet-install.ps1 -InstallDir '/Program Files/dotnet' -Runtime aspnetcore -Version 3.1.18; `
    Remove-Item -Force dotnet-install.ps1; `
 	setx /M PATH $($Env:PATH + ';' + $Env:ProgramFiles + '\dotnet')

# Install .NET Core
ENV DOTNET_VERSION 3.1.18
ENV DOTNET_DOWNLOAD_URL https://download.visualstudio.microsoft.com/download/pr/a363a491-56ab-4451-a901-e5886dea2fc6/40595416f34ad49d8a83c2bf83f03487/dotnet-hosting-3.1.18-win.exe


ENV DOTNET_DOWNLOAD_SHA d0c3ea9603345a6e4dfdf0fa9d652b4fa7f5207b123aca24861f8744798f7597463f56ada63c6530dfec44e61de4d31efe4ac1aea3fd75c9fe0d446a2342d561
RUN Invoke-WebRequest $Env:DOTNET_DOWNLOAD_URL -OutFile WindowsHosting.exe; `
    if ((Get-FileHash WindowsHosting.exe -Algorithm sha512).Hash -ne $Env:DOTNET_DOWNLOAD_SHA) { `
        Write-Host 'CHECKSUM VERIFICATION FAILED!'; `
        exit 1; `
    }; `
    `
    dir c:\Windows\Installer; `
    Start-Process "./WindowsHosting.exe" '/install /quiet /norestart' -Wait; `
    Remove-Item -Force -Recurse 'C:\ProgramData\Package Cache\*'; `
    Remove-Item -Force -Recurse C:\Windows\Installer\*; `
    Remove-Item -Force WindowsHosting.exe

RUN setx /M PATH $($Env:PATH + ';' + $Env:ProgramFiles + '\dotnet')
# Enable detection of running in a container
ENV DOTNET_RUNNING_IN_CONTAINER=true

## Create Web Site and Web Application and unlock sections
 
 RUN Remove-Website -Name 'Default Web Site'; `
    New-WebAppPool -Name 'webapp'; `
    Set-ItemProperty IIS:\AppPools\webapp -Name managedRuntimeVersion -Value ''; `
    Set-ItemProperty IIS:\AppPools\webapp -Name enable32BitAppOnWin64 -Value 0; `
    Set-ItemProperty IIS:\AppPools\webapp -Name processModel -value @{identitytype='ApplicationPoolIdentity'}; `
    New-Website -Name 'webapp' `
                -Port 80 -PhysicalPath 'C:\webapp' `
                -ApplicationPool 'webapp' -force;  `
    & $env:windir\system32\inetsrv\appcmd.exe unlock config -section:system.webServer/security/authentication/windowsAuthentication;  `
    & $env:windir\system32\inetsrv\appcmd.exe unlock config -section:system.webServer/security/authentication/anonymousAuthentication; `
	& $env:windir\system32\inetsrv\appcmd.exe set apppool webapp /processModel.identityType:NetworkService

EXPOSE 80

# Create a directory for the webapp and copy it
RUN mkdir c:\webapp
COPY .\published\ C:\webapp